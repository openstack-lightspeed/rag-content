name: "Build and push rag-content container image"

on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

  schedule:
    - cron: '15 02 * * *'

env:
  IMAGE_NAME: quay.io/openstack-lightspeed/${{ github.event.repository.name }}
  OS_VERSION: 2024.2
  # Default tag value for manual triggers of the job or other events to prevent
  # overwriting nightly-*, commit, or os-docs-* tags. Ideally this value should
  # never be used.
  TAGS: backup

jobs:
  build-and-push-rag-content:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          # This might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB.
          tool-cache: true

      - name: Checkout to the repository
        uses: actions/checkout@v4

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Build only partial rag-content when running in the check pipeline
        if: github.event_name == 'pull_request'
        run: |
          echo OS_PROJECTS="nova" >> $GITHUB_ENV

      # The INDEX_NAME variable specifies both the container image tag for the
      # vector DB and the index ID for the data stored within the image. By making
      # the image tag match the internal index ID, it becomes easy to identify
      # which index is contained within each image.
      - name: Set INDEX_NAME env variable
        run: |
          echo "INDEX_NAME=os-docs-${{ env.OS_VERSION }}" >> $GITHUB_ENV

      # For periodic nightly builds, use nightly-YYYYMMDD and os-docs-2024.2
      # tags to avoid overwriting commit-based tags. This prevents breaking
      # existing sha256 references used by openstack-k8s-operators/openstack-operator
      # builds. Please modify with caution!
      - name: Set TAGS for periodic builds
        if: github.event_name == 'schedule'
        run: |
          echo "TAGS=nightly-$(date -u +'%Y%m%d') ${{ env.INDEX_NAME }}" >> $GITHUB_ENV

      - name: Set TAGS for push builds
        if: github.event_name == 'push'
        run: |
          echo "TAGS=${{ github.sha }} ${{ env.INDEX_NAME }}" >> $GITHUB_ENV

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ github.event.repository.name }}
          tags: ${{ env.TAGS }}
          oci: true
          # We are using FLAVOR=cpu because Github runners do not offer GPUs and
          # NUM_WORKERS is set to 4 because that's the default number of cores
          # available on ubuntu-latest runner.
          build-args: |
            FLAVOR=cpu
            NUM_WORKERS=4
            OS_PROJECTS=${{ env.OS_PROJECTS }}
            OS_VERSION=${{ env.OS_VERSION }}
            INDEX_NAME=${{ env.INDEX_NAME }}
            DOCS_LINK_UNREACHABLE_ACTION=fail
          context: .
          containerfiles: |
            ./Containerfile

      - name: Log in to quay.io
        if: github.event_name == 'schedule' || github.event_name == 'push'
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.QUAY_IO_LOGIN }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}
          registry: quay.io

      - name: Push the image to quay.io
        if: github.event_name == 'schedule' || github.event_name == 'push'
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          registry: quay.io/openstack-lightspeed
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          username: ${{ secrets.QUAY_IO_LOGIN }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Get sha256 digest
        if: github.event_name == 'schedule' || github.event_name == 'push'
        run: |
          DIGEST=$(skopeo inspect docker://${{ env.IMAGE_NAME }}:${{ github.sha }} | jq -r '.Digest')
          echo "IMAGE_DIGEST=$DIGEST" >> $GITHUB_ENV

      - name: Sign image
        if: github.event_name == 'schedule' || github.event_name == 'push'
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_NAME }}@${{ env.IMAGE_DIGEST }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_KEY_PASSWORD }}
